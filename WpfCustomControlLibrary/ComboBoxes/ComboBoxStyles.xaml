<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfCustomControlLibrary.ComboBoxes" xmlns:shadowboxes="clr-namespace:WpfCustomControlLibrary.ShadowBoxes">

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <shadowboxes:BaseDoubleShadowBoxControl
                x:Name="ShadowBoxControl"
                BorderCornerRadius="10"
                Margin="-5"
                Padding="9"
                Focusable="False" 
                BackgroundColor="{TemplateBinding Background}">
                <TextBlock></TextBlock>
            </shadowboxes:BaseDoubleShadowBoxControl>

            <Path 
                x:Name="Arrow"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Margin="10 0"
                Grid.Column="1"
                Fill="{StaticResource Light}"
                Data="M5,8 L5,10 L9,15 L13,10 L13,8 L9,11 z">
                <Path.RenderTransform>
                    <TransformGroup>
                        <RotateTransform x:Name="MyAnimatedTransform" Angle="0" CenterX="9" CenterY="11">
                        </RotateTransform>
                        <TranslateTransform Y="-3"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="ToggleButton.Checked">
                <BeginStoryboard>
                    <Storyboard>

                        <DoubleAnimation
                            x:Name="ArrowRotateAnimation"
                            Storyboard.TargetName="MyAnimatedTransform"
                            Storyboard.TargetProperty="(RotateTransform.Angle)"
                            From="0.0" To="180" Duration="0:0:0.15"
                            />

                        <ObjectAnimationUsingKeyFrames
                            x:Name="SquaringCornersAnimation"
                            Storyboard.TargetName="ShadowBoxControl"
                            Storyboard.TargetProperty="(shadowboxes:BaseDoubleShadowBoxControl.BorderCornerRadius)"
                            Duration="0:0:0.15">
                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="10" BottomRight="10" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="9" BottomRight="9" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="8" BottomRight="8" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="7" BottomRight="7" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="6" BottomRight="6" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="5" BottomRight="5" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="4" BottomRight="4" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="3" BottomRight="3" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="2" BottomRight="2" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="1" BottomRight="1" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                <BeginStoryboard>
                    <Storyboard>

                        <DoubleAnimation
                            x:Name="ReverseRotateArrowAnimation"
                            Storyboard.TargetName="MyAnimatedTransform"
                            Storyboard.TargetProperty="(RotateTransform.Angle)"
                            From="180" To="0.0" Duration="0:0:0.15" 
                            />

                        <ObjectAnimationUsingKeyFrames
                            x:Name="DesquaringCornersAnimation"
                            Storyboard.TargetName="ShadowBoxControl"
                            Storyboard.TargetProperty="(shadowboxes:BaseDoubleShadowBoxControl.BorderCornerRadius)"
                            Duration="0:0:0.15">
                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="1" BottomRight="1" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="2" BottomRight="2" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="3" BottomRight="3" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="4" BottomRight="4" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="5" BottomRight="5" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="6" BottomRight="6" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="7" BottomRight="7" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="8" BottomRight="8" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="9" BottomRight="9" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame>
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius BottomLeft="10" BottomRight="10" TopLeft="10" TopRight="10"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource Light}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Width="{TemplateBinding Width}"
                            Focusable="False"
                            Background="{TemplateBinding Background}"
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter 
                            Name="ContentSite" IsHitTestVisible="False"  
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="8,3,33,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,3,3"
                            Focusable="False" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Fade"
                            >
                            <Grid 
                                Name="DropDown"
                                SnapsToDevicePixels="True"                
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Margin="10">
                                <Border 
                                    x:Name="clipMask"
                                    Background="{StaticResource LightestGray}"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    CornerRadius="0 0 10 10">
                                </Border>
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource LightestGray}"
                                    BorderThickness="0"
                                    CornerRadius="0 0 10 10">
                                    <Border.Effect>
                                        <DropShadowEffect Color="{Binding Color, Source={StaticResource OuterLowerShadowColor}}" 
                                                          ShadowDepth="2" 
                                                          BlurRadius="6"
                                                          Opacity="0.6"
                                                          Direction="-90" />
                                    </Border.Effect>
                                </Border>
                                <Border 
                                    x:Name="DropDownBorder3"
                                    Background="{StaticResource LightestGray}"
                                    BorderThickness="0"
                                    CornerRadius="0 0 10 10">
                                    <Border.Effect>
                                        <DropShadowEffect Color="{Binding Color, Source={StaticResource OuterLowerShadowColor}}" 
                                                          ShadowDepth="2" 
                                                          BlurRadius="6"
                                                          Opacity="0.6"
                                                          Direction="0" />
                                    </Border.Effect>
                                </Border>
                                <Border 
                                    x:Name="DropDownBorder2"
                                    Background="{StaticResource LightestGray}"
                                    BorderThickness="0"
                                    CornerRadius="0 0 10 10">
                                    <Border.Effect>
                                        <DropShadowEffect Color="{Binding Color, Source={StaticResource OuterUpperShadowColor}}"
                                                          Direction="135" 
                                                          ShadowDepth="1" 
                                                          BlurRadius="4"/>
                                    </Border.Effect>
                                </Border>
                                <Grid Margin="-1" Panel.ZIndex="1">
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=clipMask}" Stretch="None" />
                                    </Grid.OpacityMask>
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource Light}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border 
                        x:Name="ComboBoxItemBorder"
                        SnapsToDevicePixels="true"
                        Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <ContentPresenter
                            Margin="7 3"
                            Name="Presenter">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="{StaticResource ComboBoxItemHoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="{StaticResource ComboBoxItemActiveColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="{StaticResource ComboBoxItemHoverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource ComboBoxItemColor1}" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{StaticResource ComboBoxItemColor2}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>