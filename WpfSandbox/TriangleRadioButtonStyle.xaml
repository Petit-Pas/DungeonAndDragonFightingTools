<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfSandbox" 
                    xmlns:converters="clr-namespace:DDFight.Converters;assembly=DDFight">
    <converters:BasicOperationConverter x:Key="OperationConverter"/>
    <Style TargetType="local:TriangleRadioButton" x:Key="TriangleRadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TriangleRadioButton}">
                    <Path 
                        Name="ThePath" 
                        Fill="Black"
                        Stroke="White"
                        Data="{Binding Path=(local:TriangleRadioButtonProperties.PathGeometry), RelativeSource={RelativeSource TemplatedParent}}">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform 
                                    X="{Binding Path=ActualWidth, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, 
                                        Converter={StaticResource ResourceKey=OperationConverter}, ConverterParameter='x/2'}"
                                    Y="{Binding Path=ActualHeight, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, 
                                        Converter={StaticResource ResourceKey=OperationConverter}, ConverterParameter='x/2'}"/>

                                <RotateTransform 
                                    Angle="{Binding Path=Angle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TriangleRadioButton}}}"
                                    CenterX="{Binding Path=ActualWidth, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, 
                                        Converter={StaticResource ResourceKey=OperationConverter}, ConverterParameter='x/2'}"
                                    CenterY="{Binding Path=ActualHeight, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, 
                                        Converter={StaticResource ResourceKey=OperationConverter}, ConverterParameter='x/2'}"/>

                                <ScaleTransform 
                                    ScaleX="{Binding Scale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TriangleRadioButton}}}" 
                                    ScaleY="{Binding Scale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TriangleRadioButton}}}" 
                                    CenterX="{Binding Path=ActualWidth, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, 
                                        Converter={StaticResource ResourceKey=OperationConverter}, ConverterParameter='x/2'}"
                                    CenterY="{Binding Path=ActualHeight, 
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, 
                                        Converter={StaticResource ResourceKey=OperationConverter}, ConverterParameter='x/2'}"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{StaticResource LightIndigo}" TargetName="ThePath"/>
                       </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" Value="{StaticResource Indigo}" TargetName="ThePath"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>